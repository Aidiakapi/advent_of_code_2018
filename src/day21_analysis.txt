Input:

#ip 4
00   seti 123 0 5
01   bani 5 456 5
02   eqri 5 72 5
03   addr 5 4 4
04   seti 0 0 4
05   seti 0 7 5
06   bori 5 65536 3
07   seti 733884 6 5
08   bani 3 255 1
09   addr 5 1 5
10   bani 5 16777215 5
11   muli 5 65899 5
12   bani 5 16777215 5
13   gtir 256 3 1
14   addr 1 4 4
15   addi 4 1 4
16   seti 27 8 4
17   seti 0 6 1
18   addi 1 1 2
19   muli 2 256 2
20   gtrr 2 3 2
21   addr 2 4 4
22   addi 4 1 4
23   seti 25 4 4
24   addi 1 1 1
25   seti 17 8 4
26   setr 1 7 3
27   seti 7 0 4
28   eqrr 5 0 1
29   addr 1 4 4
30   seti 5 9 4

Analysis:

Register 0 is the variable we control, and it's never modified by the program.
It's solely used by instruction 28 in equality comparison to register 5.
Instruction 29 will terminate the program if R0 == R5.
Instruction 30 will jump to instruction 6 if R0 != R5.

To solve this, run the program until it hits instruction 28. Evaluate the operand
which isn't R0 in the instruction, and its value will be the solution to part1.

Part 2 can be solved by evaluating R5 at instruction 28 until a value that was
previously seen is encountered. This isn't the most elegant or fastest solution,
but it works.
